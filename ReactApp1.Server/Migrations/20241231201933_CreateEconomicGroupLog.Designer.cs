// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactApp1.Server.Infra;

#nullable disable

namespace ReactApp1.Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241231201933_CreateEconomicGroupLog")]
    partial class CreateEconomicGroupLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("StateID")
                        .HasColumnType("integer")
                        .HasColumnName("StateID");

                    b.HasKey("ID");

                    b.HasIndex("StateID");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreationDate = new DateTime(2024, 12, 31, 17, 19, 32, 295, DateTimeKind.Local).AddTicks(6757),
                            Name = "Guararema",
                            StateID = 1
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreationDate = new DateTime(2024, 12, 31, 17, 19, 32, 293, DateTimeKind.Local).AddTicks(2580),
                            Name = "Brasil"
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.CountryGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<int>("CountryID")
                        .HasColumnType("integer")
                        .HasColumnName("CountryID");

                    b.Property<int>("GroupID")
                        .HasColumnType("integer")
                        .HasColumnName("GroupID");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("GroupID");

                    b.ToTable("CountryGroup");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CountryID = 1,
                            GroupID = 1
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.EconomicGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("EconomicGroup");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreationDate = new DateTime(2024, 12, 31, 17, 19, 32, 296, DateTimeKind.Local).AddTicks(7350),
                            Name = "Mercosul"
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.ProjectLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("text")
                        .HasColumnName("DateTime");

                    b.Property<string>("Exception")
                        .HasColumnType("text")
                        .HasColumnName("Exception");

                    b.Property<string>("Hostname")
                        .HasColumnType("text")
                        .HasColumnName("Hostname");

                    b.Property<string>("Level")
                        .HasColumnType("text")
                        .HasColumnName("Level");

                    b.Property<string>("Logger")
                        .HasColumnType("text")
                        .HasColumnName("Logger");

                    b.Property<string>("Message")
                        .HasColumnType("text")
                        .HasColumnName("Message");

                    b.Property<string>("Thread")
                        .HasColumnType("text")
                        .HasColumnName("Thread");

                    b.HasKey("ID");

                    b.ToTable("ProjectLog");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateTime(2024, 12, 31, 17, 19, 32, 301, DateTimeKind.Local).AddTicks(2071),
                            Exception = "test",
                            Hostname = "test",
                            Level = "Test",
                            Logger = "Test",
                            Message = "Test",
                            Thread = "Test"
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<int>("CountryID")
                        .HasColumnType("integer")
                        .HasColumnName("CountryID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CountryID = 1,
                            CreationDate = new DateTime(2024, 12, 31, 17, 19, 32, 295, DateTimeKind.Local).AddTicks(5046),
                            Name = "São Paulo"
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.City", b =>
                {
                    b.HasOne("ReactApp1.Server.Domain.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.CountryGroup", b =>
                {
                    b.HasOne("ReactApp1.Server.Domain.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactApp1.Server.Domain.Models.EconomicGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.State", b =>
                {
                    b.HasOne("ReactApp1.Server.Domain.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
