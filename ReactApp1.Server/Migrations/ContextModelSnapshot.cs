// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactApp1.Server.Infra;

#nullable disable

namespace ReactApp1.Server.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("StateID")
                        .HasColumnType("integer")
                        .HasColumnName("StateID");

                    b.HasKey("ID");

                    b.HasIndex("StateID");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreationDate = new DateTime(2024, 12, 29, 23, 53, 51, 163, DateTimeKind.Local).AddTicks(3569),
                            Name = "Guararema",
                            StateID = 1
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreationDate = new DateTime(2024, 12, 29, 23, 53, 51, 160, DateTimeKind.Local).AddTicks(9119),
                            Name = "Brasil"
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<int>("CountryID")
                        .HasColumnType("integer")
                        .HasColumnName("CountryID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("text")
                        .HasColumnName("CreationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CountryID = 1,
                            CreationDate = new DateTime(2024, 12, 29, 23, 53, 51, 163, DateTimeKind.Local).AddTicks(1823),
                            Name = "São Paulo"
                        });
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.City", b =>
                {
                    b.HasOne("ReactApp1.Server.Domain.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("ReactApp1.Server.Domain.Models.State", b =>
                {
                    b.HasOne("ReactApp1.Server.Domain.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
